#include "SFML/Graphics.hpp"

#define MEMORY_SIZE 4096
#define STACK_SIZE 16
#define V_SIZE 16
#define GFX_COLS 64
#define GFX_ROWS 32
#define GFX_SIZE GFX_COLS*GFX_ROWS
#define KEY_SIZE 16
#define MAX_GAME_SIZE (0x1000 - 0x200)
#define FONT_SIZE 80
#define FONTSET_BYTES_PER_CHAR 5

#define log(msg) printf("%s\n", msg)

typedef unsigned char byte;
typedef unsigned short word;

class Chip8
{
private:
    word opcode;
    byte memory[MEMORY_SIZE];
    word stack[STACK_SIZE];
    word SP; // Stack pointer
    byte V[V_SIZE]; // Registers
    word I; // Index register
    word PC; // Program counter
    byte delay_timer;
    byte sound_timer;
	byte key[KEY_SIZE]; // Keypad

    byte fontset[FONT_SIZE] =
    {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };
public:
    byte gfx[GFX_SIZE]; // Graphics
    bool drawFlag;

	void init();
	void loadFile(char* fileName);
	bool cycle();
    bool decodeOpcode();
};